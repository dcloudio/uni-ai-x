<template>
	<view class="msg-types-item-root uni-code-msg">
		<view class="code-header">
			<text class="language">{{language}}</text>
			<!-- <text v-if="supportHighlight" class="run-time">代码解析耗时：{{runTime}}ms</text> -->
			<text v-if="!supportHighlight" class="not-support-tip">注意：当前语言不支持高亮显示</text>
			<view class="copy-btn" @click="copyCode">
				<uni-ai-icon class="copy" code="e60c" size="12" color="#999"/>
				<text class="copy-text">复制代码</text>
			</view>
		</view>
		<scroll-view class="code-scroll-view" direction="horizontal" :style="{height: scrollViewHeight}">
			<text v-if="tokensLines.length == 0" class="text origin-code" :selectable="true">{{codeText}}</text>
			<text v-else class="line" :selectable="true" v-for="(tokens,index) in tokensLines" :key="index">
				<text v-for="token in tokens" class="code" :class="token.className">{{token.text}}</text>
			</text>
		</scroll-view>
	</view>
</template>

<script>
import { IToken, parseCode } from './parseCode.uts'
export default {
	name: 'msg-code',
	props: {
		codeText: {
			type: String,
			default: `
	import App from './App.uvue'
	// 注释：这是注释的内容
	import { createSSRApp } from 'vue'
	export function createApp() {
		const app = createSSRApp(App)
		return {
			app
		}
	}
`
		},
		codeTokens:  {
			type: Array as PropType<IToken[][]>,
			required: false,
			default: [] as IToken[][],
		},
		language: {
			type: String,
			default: 'javascript',
		},
	},
	data() {
		return {
			tokens:[] as Array<IToken>,
			runTime: 0,
			// 当前语言是否支持高亮显示
			supportHighlight: true,
			tokensLines:[] as IToken[][]
		}
	},
	watch: {
		codeTokens:{
			handler(codeTokens: IToken[][]) {
				this.tokensLines = codeTokens
			},
			immediate: true,
			deep: true
		}
	},
	computed: {
		scrollViewHeight(): string {
			return `${this.codeText.split('\n').length * 20 + 12}px`
		}
	},
	methods: {
		copyCode() {
			uni.setClipboardData({
				data: this.codeText,
				success: () => {
					uni.showToast({
						title: '代码已复制到剪贴板',
						icon: 'success'
					})
				},
				fail: () => {
					uni.showToast({
						title: '复制失败',
						icon: 'none'
					})
				}
			})
		}
	}
}
</script>

<style lang="scss" scoped>
@font-face {
	// #ifdef WEB
	font-display: swap;
	// #endif
	font-family: CodeFontFamily;
	src: url('/uni_modules/uni-ai-x/static/font/FiraCode-Regular.ttf') format('truetype');
}
.msg-types-item-root {
	margin-bottom: 5px;
	background-color: #1e1e1e !important; // 更深沉的背景色，适合深色主题
	border-radius: 6px;
	.code-header {
		width: 100%;
		flex-direction: row;
		justify-content: space-between;
		align-items: center;
		padding: 2px 10px;
		background-color: #252526; // 稍微浅一点的头部背景色
		
		.language {
			font-size: 12px;
			color: #999; // 更亮的蓝色，突出显示
		}
		
		.run-time {
			font-size: 12px;
			color: #6a9955; // 更亮的绿色，易于识别
		}
		.not-support-tip {
			font-size: 12px;
			color: #e6a23c; // 警告文本使用暖黄色，提高可见性但不刺眼
		}
		
		.copy-btn {
			flex-direction: row;
			align-items: center;
			padding: 2px 4px;
			border-radius: 4px;
			// #ifdef WEB
			cursor: pointer;
			&:hover {
				background-color: #37373d; // 悬停时的背景色
			}
			// #endif
			.copy-text {
				font-size: 10px;
				color: #999;
				margin-left: 2px;
			}
		}
	}
	.code-scroll-view {
		padding: 6px 10px;
		height: auto;
		width: 100%;
		// 高度变化的过渡动画
		transition: height 0.2s linear;
		.line {
			height: 20px;
			white-space: nowrap;
			align-self: flex-start;
			.code {
				white-space: nowrap;
				font-family: CodeFontFamily;
				font-size: 14px;
				color: #d4d4d4; // 默认代码文本颜色
			}
			// 代码高亮颜色，适合深色主题
			.keyword { color: #569cd6; } // 关键字使用蓝色
			.string { color: #ce9178; } // 字符串使用橙色
			.comment { color: #999; } // 注释使用灰色
			.meta { color: #d16969; } // 元信息使用红色
			.storage { color: #569cd6; } // 存储类型使用蓝色
			.eol {
				/* #ifndef APP */
				white-space: pre;
				/* #endif */
			}
			.entity { color: #4ec9b0; } // 实体使用青色
			.support { color: #4ec9b0; } // 支持类使用青色
			.constant { color: #b5cea8; } // 常量使用浅绿色
			.variable { color: #9cdcfe; } // 变量使用浅蓝色
			.punctuation { color: #d4d4d4; } // 标点符号使用默认文本颜色
			.function { color: #dcdcaa; } // 函数使用黄色
		}

		.text {
			color: #d4d4d4; // 更亮的文本颜色，提高可读性
			white-space: normal;
			/* #ifndef APP */
			word-break: break-all;
			/* #endif */
		}
		
		.origin-code {
			line-height: 20px;
			font-size: 14px;
			font-family: CodeFontFamily;
		}
	}
}
// /Applications/Visual\ Studio\ Code.app/Contents/Resources/app/extensions/theme-defaults/themes/light_vs.json
</style>